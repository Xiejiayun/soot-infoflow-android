<android.util.Log: int d(java.lang.String,java.lang.String)> -> _EXITPOINT_
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> -> _EXITPOINT_
<android.util.Log: int e(java.lang.String,java.lang.String)> -> _EXITPOINT_
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> -> _EXITPOINT_
<android.util.Log: int i(java.lang.String,java.lang.String)> -> _EXITPOINT_
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> -> _EXITPOINT_
<android.util.Log: int v(java.lang.String,java.lang.String)> -> _EXITPOINT_
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> -> _EXITPOINT_
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> -> _EXITPOINT_
<android.util.Log: int w(java.lang.String,java.lang.String)> -> _EXITPOINT_
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> _EXITPOINT_
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)> -> _EXITPOINT_
<android.util.Log: int wtf(java.lang.String,java.lang.String)> -> _EXITPOINT_
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> -> _EXITPOINT_
<android.content.Intent: android.content.Intent setAction(java.lang.String)> -> _EXITPOINT_
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.Class)> -> _EXITPOINT_
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)> -> _EXITPOINT_
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)> -> _EXITPOINT_
<android.content.Context: void sendBroadcast(android.content.Intent)> -> _EXITPOINT_
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)> -> _EXITPOINT_
<android.media.MediaRecorder: void setVideoSource(int)> -> _EXITPOINT_
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)> -> _EXITPOINT_
<android.media.MediaRecorder: void start()> -> _EXITPOINT_
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> _EXITPOINT_
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> -> _EXITPOINT_
<android.content.IntentFilter: void addAction(java.lang.String)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)> -> _EXITPOINT_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> -> _EXITPOINT_
<android.content.Context: void startActivity(android.content.Intent)> -> _EXITPOINT_
<android.content.Context: void startActivity(android.content.Intent,android.os.Bundle)> -> _EXITPOINT_
<android.content.Context: void startActivities(android.content.Intent[])> -> _EXITPOINT_
<android.content.Context: void startActivities(android.content.Intent[],android.os.Bundle)> -> _EXITPOINT_
<android.content.Context: android.content.ComponentName startService(android.content.Intent)> -> _EXITPOINT_
<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> -> _EXITPOINT_
<android.content.Context: void sendBroadcast(android.content.Intent)> -> _EXITPOINT_
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)> -> _EXITPOINT_
<android.app.Activity: void setResult(int,android.content.Intent)> -> _EXITPOINT_
<android.app.Activity: void startActivity(android.content.Intent)> -> _EXITPOINT_
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void startActivities(android.content.Intent[])> -> _EXITPOINT_
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void startActivityForResult(android.content.Intent,int)> -> _EXITPOINT_
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)> -> _EXITPOINT_
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)> -> _EXITPOINT_
<android.app.Activity: void startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void startActivityIfNeeded(android.content.Intent,int)> -> _EXITPOINT_
<android.app.Activity: android.content.ComponentName startService(android.content.Intent)> -> _EXITPOINT_
<android.app.Activity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> -> _EXITPOINT_
<android.app.Activity: void sendBroadcast(android.content.Intent)> -> _EXITPOINT_
<android.app.Activity: void sendBroadcast(android.content.Intent,java.lang.String)> -> _EXITPOINT_
<android.app.Activity: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)> -> _EXITPOINT_
<android.app.Activity: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)> -> _EXITPOINT_
<android.app.Activity: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> -> _EXITPOINT_
<android.app.Activity: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void sendStickyBroadcast(android.content.Intent)> -> _EXITPOINT_
<android.app.Activity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> -> _EXITPOINT_
<android.app.Activity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _EXITPOINT_
<android.app.Activity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _EXITPOINT_
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _EXITPOINT_
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])> -> _EXITPOINT_
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _EXITPOINT_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _EXITPOINT_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _EXITPOINT_
